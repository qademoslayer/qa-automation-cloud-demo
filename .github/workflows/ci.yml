name: QA Cloud Pipeline (Allure + Slack)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  qa-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps

      - name: Data Validation
        run: |
          python tests/validation/nea_validate.py

      - name: Run API tests (pytest + allure)
        run: |
          pytest tests/api --alluredir=allure-results --html=reports/api_report.html --self-contained-html

      - name: Run UI tests (pytest + allure)
        env:
          BASE_URL: ${{ vars.BASE_URL || 'https://example.com' }}
          CONTACT_FORM_URL: ${{ vars.CONTACT_FORM_URL || '' }}
        run: |
          pytest tests/ui --alluredir=allure-results --html=reports/ui_report.html --self-contained-html

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.7
        with:
          results-dir: allure-results
          report-dir: allure-report

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qa-artifacts
          path: |
            reports/**
            allure-results/**
            allure-report/**

      - name: Deploy Allure to GitHub Pages
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      - name: Slack Notification
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          STATUS="${{ job.status }}"
          SUMMARY="QA Pipeline: ${STATUS}. Repo: ${{ github.repository }}. Commit: ${{ github.sha }}"
          PAYLOAD=$(jq -n --arg text "$SUMMARY" '{text: $text}')
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
