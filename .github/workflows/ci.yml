name: QA Cloud Pipeline (Allure + Slack Enhanced)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  qa-tests:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest pytest-html allure-pytest pytest-allure-adaptor || true

      # 4️⃣ Record start time
      - name: Record start time
        id: start
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV

      # 5️⃣ Run Tests and Collect Allure Results
      - name: Run Tests (pytest + allure)
        run: |
          pytest --alluredir=allure-results --maxfail=5 || true
          TOTAL=$(grep -o "test" allure-results/*.json | wc -l)
          FAILED=$(grep -o '"status": "failed"' allure-results/*.json | wc -l)
          echo "total_tests=$TOTAL" >> $GITHUB_ENV
          echo "failed_tests=$FAILED" >> $GITHUB_ENV

      # 6️⃣ Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report || true

      # 7️⃣ Deploy Allure to GitHub Pages
      - name: Deploy Allure to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      # 8️⃣ Compute Duration
      - name: Compute duration
        id: duration
        run: |
          end=$(date +%s)
          duration=$((end - $start_time))
          echo "duration=$duration" >> $GITHUB_ENV

      # 9️⃣ Slack Notification (Detailed)
      - name: Send Slack Notification
        if: always()
        run: |
          STATUS="${{ job.status }}"
          COLOR="#439FE0"
          ICON=":hourglass_flowing_sand:"
          if [ "$STATUS" = "success" ]; then COLOR="#36a64f"; ICON=":white_check_mark:"; fi
          if [ "$STATUS" = "failure" ]; then COLOR="#FF0000"; ICON=":x:"; fi

          DURATION_SEC=${{ env.duration }}
          DURATION_MIN=$(echo "scale=2; $DURATION_SEC/60" | bc)

          TOTAL=${{ env.total_tests }}
          FAILED=${{ env.failed_tests }}
          PASSED=$((TOTAL - FAILED))

          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"attachments\": [
              {
                \"color\": \"$COLOR\",
                \"blocks\": [
                  {
                    \"type\": \"header\",
                    \"text\": {\"type\": \"plain_text\", \"text\": \"$ICON QA Pipeline Completed\"}
                  },
                  {
                    \"type\": \"section\",
                    \"fields\": [
                      {\"type\": \"mrkdwn\", \"text\": \"*Status:*\n$STATUS\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Duration:*\n${DURATION_MIN} min\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Total Tests:*\n$TOTAL\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Failed:*\n$FAILED\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Report:*\n<https://qademoslayer.github.io/qa-automation-cloud-demo/|View Allure Report>\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Triggered by:*\n${{ github.actor }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Branch:*\n${{ github.ref_name }}\"}
                    ]
                  },
                  {
                    \"type\": \"context\",
                    \"elements\": [
                      {\"type\": \"mrkdwn\", \"text\": \"Commit: ${{ github.sha }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"Repo: ${{ github.repository }}\"}
                    ]
                  }
                ]
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
