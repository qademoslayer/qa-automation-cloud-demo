name: QA Cloud Pipeline (Allure + Slack + Smart Auto Trigger)

on:
  workflow_dispatch:         # manual trigger workflow
  push:                      # when push/pull to main branch auto trigger
    branches: [ "main" ]
  pull_request:              # when PR auto trigger
    branches: [ "main" ]
  schedule:                  # every midnight 3:00ÔºàUTC+8 ‚Üí 19:00 UTCÔºâ
    - cron: '0 19 * * *'

jobs:
  qa-tests:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Detect if code changes include tests
      - name: Check if test files changed
        id: check_tests
        run: |
          echo "üîç Checking for test file changes..."
          git fetch origin main || true
          CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -E '^tests/|\.py$' || true)
          if [ -z "$CHANGED" ]; then
            echo "No test-related changes detected."
            echo "skip_run=true" >> $GITHUB_ENV
          else
            echo "Detected test changes: $CHANGED"
            echo "skip_run=false" >> $GITHUB_ENV
          fi

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        if: env.skip_run == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-html allure-pytest>=2.13.5
          pip install --upgrade allure-python-commons

      # 5Ô∏è‚É£ Install Allure Commandline
      - name: Install Allure Commandline
        if: env.skip_run == 'false'
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jre wget unzip
          wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.29.0/allure-commandline-2.29.0.zip -O allure.zip
          unzip allure.zip -d /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
          allure --version

      # 6Ô∏è‚É£ Run Tests (Pytest + Allure)
      - name: Run Tests
        if: env.skip_run == 'false'
        run: |
          mkdir -p allure-results
          python -c "import collections; import collections.abc; collections.Mapping = collections.abc.Mapping"
          pytest -v tests/api --alluredir=allure-results --clean-alluredir || true
          echo "‚úÖ Tests executed. Checking allure results..."
          ls -al allure-results

      # 7Ô∏è‚É£ Generate Allure Report
      - name: Generate Allure Report
        if: env.skip_run == 'false'
        run: |
          echo "Generating Allure Report..."
          allure generate allure-results --clean -o allure-report || true
          if [ ! -f "allure-report/index.html" ]; then
            echo "‚ö†Ô∏è Allure report not generated. Skipping deployment."
            echo "REPORT_EXISTS=false" >> $GITHUB_ENV
          else
            echo "‚úÖ Allure report generated successfully."
            echo "REPORT_EXISTS=true" >> $GITHUB_ENV
          fi

      # 8Ô∏è‚É£ Deploy to GitHub Pages
      - name: Deploy Allure to GitHub Pages
        if: env.skip_run == 'false' && env.REPORT_EXISTS == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      # 9Ô∏è‚É£ Slack Notification (Smart)
      - name: Send Slack Notification
        if: always()
        run: |
          STATUS="${{ job.status }}"
          SKIP="${{ env.skip_run }}"
          COLOR="#36a64f"
          ICON=":white_check_mark:"
          MSG="QA Pipeline Completed"
          if [ "$STATUS" = "failure" ]; then
            COLOR="#FF0000"
            ICON=":x:"
            MSG="QA Pipeline Failed"
          fi
          if [ "$SKIP" = "true" ]; then
            COLOR="#AAAAAA"
            ICON=":zzz:"
            MSG="QA Pipeline Skipped (No Test Changes)"
          fi
          if [ "$REPORT_EXISTS" = "false" ]; then
            COLOR="#FFA500"
            ICON=":warning:"
            MSG="QA Pipeline Skipped (No Allure Report)"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"attachments\": [
              {
                \"color\": \"$COLOR\",
                \"blocks\": [
                  {
                    \"type\": \"header\",
                    \"text\": {\"type\": \"plain_text\", \"text\": \"$ICON $MSG\"}
                  },
                  {
                    \"type\": \"section\",
                    \"fields\": [
                      {\"type\": \"mrkdwn\", \"text\": \"*Status:*\n$STATUS\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Branch:*\n${{ github.ref_name }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Triggered by:*\n${{ github.actor }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Report:*\n<https://qademoslayer.github.io/qa-automation-cloud-demo/|View Allure Report>\"}
                    ]
                  }
                ]
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
