name: QA Cloud Pipeline (Allure + Slack Final Safe Version)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  qa-tests:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-html allure-pytest pytest-allure-adaptor || true

      # 4️⃣ Install Allure Commandline (Stable Maven Source)
      - name: Install Allure Commandline
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jre wget unzip
          wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.29.0/allure-commandline-2.29.0.zip -O allure.zip
          unzip allure.zip -d /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
          allure --version

      # 5️⃣ Run Tests (pytest + allure)
      - name: Run Tests
        run: |
          mkdir -p allure-results
          pytest --alluredir=allure-results || true
          echo "✅ Tests executed. Checking Allure results..."

      # 6️⃣ Generate Allure Report (with validation)
      - name: Generate Allure Report
        run: |
          echo "Generating Allure Report..."
          allure generate allure-results --clean -o allure-report || true
          if [ ! -f "allure-report/index.html" ]; then
            echo "⚠️ Allure report not generated. Skipping deployment."
            echo "REPORT_EXISTS=false" >> $GITHUB_ENV
          else
            echo "✅ Allure report generated successfully."
            echo "REPORT_EXISTS=true" >> $GITHUB_ENV
          fi

      # 7️⃣ Conditional Deploy to GitHub Pages
      - name: Deploy Allure to GitHub Pages
        if: env.REPORT_EXISTS == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      # 8️⃣ Slack Notification (Smart Status)
      - name: Send Slack Notification
        if: always()
        run: |
          STATUS="${{ job.status }}"
          COLOR="#36a64f"
          ICON=":white_check_mark:"
          MSG="QA Pipeline Completed"
          if [ "$STATUS" = "failure" ]; then
            COLOR="#FF0000"
            ICON=":x:"
            MSG="QA Pipeline Failed"
          fi
          if [ "$REPORT_EXISTS" = "false" ]; then
            COLOR="#FFA500"
            ICON=":warning:"
            MSG="QA Pipeline Skipped (No Allure Report)"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"attachments\": [
              {
                \"color\": \"$COLOR\",
                \"blocks\": [
                  {
                    \"type\": \"header\",
                    \"text\": {\"type\": \"plain_text\", \"text\": \"$ICON $MSG\"}
                  },
                  {
                    \"type\": \"section\",
                    \"fields\": [
                      {\"type\": \"mrkdwn\", \"text\": \"*Status:*\n$STATUS\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Report:*\n<https://qademoslayer.github.io/qa-automation-cloud-demo/|View Allure Report>\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Triggered by:*\n${{ github.actor }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Branch:*\n${{ github.ref_name }}\"},
                      {\"type\": \"mrkdwn\", \"text\": \"*Commit:*\n${{ github.sha }}\"}
                    ]
                  }
                ]
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
